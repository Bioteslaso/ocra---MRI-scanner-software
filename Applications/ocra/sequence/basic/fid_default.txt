J 10 										        // A[0] J to address 10 x 8 bytes A[B]
LOOP_CTR = 0x1 								        // A[1] LOOP COUNTER (NO repetitions for now)
CMD1 = TX_GATE                          		    // A[2] Data: variable "CMD1" = TX_GATE
CMD2 = 0x0                          		        // A[3] Data: variable "CMD2" = 0x0
CMD3 = RXFIFO_RESET                          		// A[4] Data: variable "CMD3" = RXFIFO_RESET
CMD4 = RX_PULSE                        				// A[5] Data: variable "CMD4" = RX_PULSE
CMD5 = TX_GATE | TX_PULSE               			// A[6] Data: variable "CND5" = TX_GATE | TX_PULSE
CMD6 = TX_GATE | TX_PULSE | RX_PULSE    			// A[7] Data: variable "CMD6" = TX_GATE | TX_PULSE | RX_PULSE
CMD7 = GRAD_PULSE                   				// A[8] Data: variable "CMD7" = GRAD_PULSE
CMD8 = GRAD_PULSE | RX_PULSE           				// A[9] Data: variable "CMD8" = GRAD_PULSE | RX_PULSE
CMD9 = TX_GATE | TX_PULSE | GRAD_PULSE	            // A[A] RF&GRAD
CMD10 = TX_GATE | TX_PULSE | GRAD_PULSE | RX_PULSE	// A[B] RF&GRAD with receiver on
NOP                                                 // A[C] UNUSED
NOP                                                 // A[D] UNUSED
NOP                                                 // A[E] UNUSED
NOP                                                 // A[F] UNUSED
LD64 2, LOOP_CTR    						        // A[10] Load LOOP_CTR to R[2]		"ENTRY POINT"
LD64 3, CMD3        						        // A[11] Load CMD3 to R[3]
LD64 4, CMD4        						        // A[12] Load CMD4 to R[4]
LD64 5, CMD5        						        // A[13] Load CMD5 to R[5]
LD64 6, CMD6        						        // A[14] Load CMD6 to R[6]
LD64 7, CMD7        						        // A[15] Load CMD7 to R[7]
LD64 8, CMD8        						        // A[16] Load CMD8 to R[8]
LD64 9, CMD9        						        // A[17] Load CMD9 to R[9]
LD64 10, CMD10      						        // A[18] Load CMD10 to R[10]
LD64 11, CMD1                                       // A[19]
LD64 12, CMD2                                       // A[1A]
NOP                                                 // A[1B] UNUSED
NOP                                                 // A[1C] UNUSED
NOP                                                 // A[1D] UNUSED
TXOFFSET 0 							                // A[1E] TXOFFSET 0: RF 90x+				"JNZ here"
GRADOFFSET 0 						                // A[1F] GRADOFFSET
PR 3, 1                                             // A[20] RESET THE FIFO
PR 11, 200                                          // A[21] 200 us blanking lead
PR 5, 120		// RF 90        	                // A[22] PR R[5] (issue CMD5) and unblank for 120 us
PR 7, 350		    // wait&grad		                // A[23] PR R[7] (issue CMD7) and last for 400 us (to avoid junks)
PR 8, 200000	// readout			                // A[24] PR R[9] (issue CMD9) and last for 200 ms (50,000 samples)
PR 12, 0  		// stop				                // A[25] PR R[4] (issue CMD4) stop
DEC 2 										        // A[26] DEC R[2]
JNZ 2, 0x1E 								        // A[27] JNZ R[2] => `PC=0x1E
HALT 										        // A[28] HALT